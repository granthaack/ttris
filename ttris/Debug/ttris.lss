
ttris.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a8  00800100  000003d2  00000466  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003d2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001f8  008001a8  008001a8  0000050e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000050e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000540  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000580  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000133d  00000000  00000000  00000608  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008e0  00000000  00000000  00001945  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007ec  00000000  00000000  00002225  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000154  00000000  00000000  00002a14  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004d2  00000000  00000000  00002b68  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fd1  00000000  00000000  0000303a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002b0  00000000  00000000  0000400b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 ed       	ldi	r30, 0xD2	; 210
  7c:	f3 e0       	ldi	r31, 0x03	; 3
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 3a       	cpi	r26, 0xA8	; 168
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	23 e0       	ldi	r18, 0x03	; 3
  8c:	a8 ea       	ldi	r26, 0xA8	; 168
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 3a       	cpi	r26, 0xA0	; 160
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 9e 01 	call	0x33c	; 0x33c <main>
  9e:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <init_screen>:

	if((c >= 'S') && (c <= 'Z'))
	{
		return 8;
	}
	if(c == ' ')
  a6:	28 9a       	sbi	0x05, 0	; 5
  a8:	28 98       	cbi	0x05, 0	; 5
  aa:	28 9a       	sbi	0x05, 0	; 5
  ac:	81 e2       	ldi	r24, 0x21	; 33
  ae:	8e bd       	out	0x2e, r24	; 46
  b0:	0d b4       	in	r0, 0x2d	; 45
  b2:	07 fe       	sbrs	r0, 7
  b4:	fd cf       	rjmp	.-6      	; 0xb0 <init_screen+0xa>
  b6:	80 e9       	ldi	r24, 0x90	; 144
  b8:	8e bd       	out	0x2e, r24	; 46
  ba:	0d b4       	in	r0, 0x2d	; 45
  bc:	07 fe       	sbrs	r0, 7
  be:	fd cf       	rjmp	.-6      	; 0xba <init_screen+0x14>
  c0:	80 e2       	ldi	r24, 0x20	; 32
  c2:	8e bd       	out	0x2e, r24	; 46
  c4:	0d b4       	in	r0, 0x2d	; 45
  c6:	07 fe       	sbrs	r0, 7
  c8:	fd cf       	rjmp	.-6      	; 0xc4 <init_screen+0x1e>
  ca:	8c e0       	ldi	r24, 0x0C	; 12
  cc:	8e bd       	out	0x2e, r24	; 46
  ce:	0d b4       	in	r0, 0x2d	; 45
  d0:	07 fe       	sbrs	r0, 7
  d2:	fd cf       	rjmp	.-6      	; 0xce <init_screen+0x28>
  d4:	80 e8       	ldi	r24, 0x80	; 128
  d6:	8e bd       	out	0x2e, r24	; 46
  d8:	0d b4       	in	r0, 0x2d	; 45
  da:	07 fe       	sbrs	r0, 7
  dc:	fd cf       	rjmp	.-6      	; 0xd8 <init_screen+0x32>
  de:	80 e4       	ldi	r24, 0x40	; 64
  e0:	8e bd       	out	0x2e, r24	; 46
  e2:	0d b4       	in	r0, 0x2d	; 45
  e4:	07 fe       	sbrs	r0, 7
  e6:	fd cf       	rjmp	.-6      	; 0xe2 <init_screen+0x3c>
  e8:	08 95       	ret

000000ea <blank_display>:
  ea:	89 ef       	ldi	r24, 0xF9	; 249
  ec:	91 e0       	ldi	r25, 0x01	; 1
  ee:	1e bc       	out	0x2e, r1	; 46
  f0:	29 9a       	sbi	0x05, 1	; 5
  f2:	0d b4       	in	r0, 0x2d	; 45
  f4:	07 fe       	sbrs	r0, 7
  f6:	fd cf       	rjmp	.-6      	; 0xf2 <blank_display+0x8>
  f8:	29 98       	cbi	0x05, 1	; 5
  fa:	01 97       	sbiw	r24, 0x01	; 1
  fc:	c1 f7       	brne	.-16     	; 0xee <blank_display+0x4>
  fe:	08 95       	ret

00000100 <clear_sprite>:
 100:	cf 93       	push	r28
 102:	df 93       	push	r29
 104:	dc 01       	movw	r26, r24
 106:	17 96       	adiw	r26, 0x07	; 7
 108:	8c 91       	ld	r24, X
 10a:	17 97       	sbiw	r26, 0x07	; 7
 10c:	88 23       	and	r24, r24
 10e:	09 f4       	brne	.+2      	; 0x112 <clear_sprite+0x12>
 110:	5b c0       	rjmp	.+182    	; 0x1c8 <clear_sprite+0xc8>
 112:	30 e0       	ldi	r19, 0x00	; 0
 114:	64 e5       	ldi	r22, 0x54	; 84
 116:	41 e0       	ldi	r20, 0x01	; 1
 118:	50 e0       	ldi	r21, 0x00	; 0
 11a:	15 96       	adiw	r26, 0x05	; 5
 11c:	2c 91       	ld	r18, X
 11e:	15 97       	sbiw	r26, 0x05	; 5
 120:	83 2f       	mov	r24, r19
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	82 0f       	add	r24, r18
 126:	91 1d       	adc	r25, r1
 128:	95 95       	asr	r25
 12a:	87 95       	ror	r24
 12c:	95 95       	asr	r25
 12e:	87 95       	ror	r24
 130:	95 95       	asr	r25
 132:	87 95       	ror	r24
 134:	80 64       	ori	r24, 0x40	; 64
 136:	8e bd       	out	0x2e, r24	; 46
 138:	0d b4       	in	r0, 0x2d	; 45
 13a:	07 fe       	sbrs	r0, 7
 13c:	fd cf       	rjmp	.-6      	; 0x138 <clear_sprite+0x38>
 13e:	16 96       	adiw	r26, 0x06	; 6
 140:	8c 91       	ld	r24, X
 142:	16 97       	sbiw	r26, 0x06	; 6
 144:	88 23       	and	r24, r24
 146:	c9 f1       	breq	.+114    	; 0x1ba <clear_sprite+0xba>
 148:	20 e0       	ldi	r18, 0x00	; 0
 14a:	14 96       	adiw	r26, 0x04	; 4
 14c:	9c 91       	ld	r25, X
 14e:	14 97       	sbiw	r26, 0x04	; 4
 150:	92 0f       	add	r25, r18
 152:	90 68       	ori	r25, 0x80	; 128
 154:	9e bd       	out	0x2e, r25	; 46
 156:	0d b4       	in	r0, 0x2d	; 45
 158:	07 fe       	sbrs	r0, 7
 15a:	fd cf       	rjmp	.-6      	; 0x156 <clear_sprite+0x56>
 15c:	11 96       	adiw	r26, 0x01	; 1
 15e:	9c 91       	ld	r25, X
 160:	11 97       	sbiw	r26, 0x01	; 1
 162:	93 0f       	add	r25, r19
 164:	e9 2f       	mov	r30, r25
 166:	e6 95       	lsr	r30
 168:	e6 95       	lsr	r30
 16a:	e6 95       	lsr	r30
 16c:	84 e5       	ldi	r24, 0x54	; 84
 16e:	e8 9f       	mul	r30, r24
 170:	f0 01       	movw	r30, r0
 172:	11 24       	eor	r1, r1
 174:	e0 50       	subi	r30, 0x00	; 0
 176:	ff 4f       	sbci	r31, 0xFF	; 255
 178:	8c 91       	ld	r24, X
 17a:	82 0f       	add	r24, r18
 17c:	e8 0f       	add	r30, r24
 17e:	f1 1d       	adc	r31, r1
 180:	97 70       	andi	r25, 0x07	; 7
 182:	ea 01       	movw	r28, r20
 184:	02 c0       	rjmp	.+4      	; 0x18a <clear_sprite+0x8a>
 186:	cc 0f       	add	r28, r28
 188:	dd 1f       	adc	r29, r29
 18a:	9a 95       	dec	r25
 18c:	e2 f7       	brpl	.-8      	; 0x186 <clear_sprite+0x86>
 18e:	ce 01       	movw	r24, r28
 190:	90 81       	ld	r25, Z
 192:	89 23       	and	r24, r25
 194:	61 f0       	breq	.+24     	; 0x1ae <clear_sprite+0xae>
 196:	14 96       	adiw	r26, 0x04	; 4
 198:	8c 91       	ld	r24, X
 19a:	14 97       	sbiw	r26, 0x04	; 4
 19c:	82 0f       	add	r24, r18
 19e:	84 35       	cpi	r24, 0x54	; 84
 1a0:	30 f4       	brcc	.+12     	; 0x1ae <clear_sprite+0xae>
 1a2:	15 96       	adiw	r26, 0x05	; 5
 1a4:	ec 91       	ld	r30, X
 1a6:	15 97       	sbiw	r26, 0x05	; 5
 1a8:	e3 0f       	add	r30, r19
 1aa:	e0 33       	cpi	r30, 0x30	; 48
 1ac:	80 f0       	brcs	.+32     	; 0x1ce <clear_sprite+0xce>
 1ae:	2f 5f       	subi	r18, 0xFF	; 255
 1b0:	16 96       	adiw	r26, 0x06	; 6
 1b2:	8c 91       	ld	r24, X
 1b4:	16 97       	sbiw	r26, 0x06	; 6
 1b6:	28 17       	cp	r18, r24
 1b8:	40 f2       	brcs	.-112    	; 0x14a <clear_sprite+0x4a>
 1ba:	3f 5f       	subi	r19, 0xFF	; 255
 1bc:	17 96       	adiw	r26, 0x07	; 7
 1be:	8c 91       	ld	r24, X
 1c0:	17 97       	sbiw	r26, 0x07	; 7
 1c2:	38 17       	cp	r19, r24
 1c4:	08 f4       	brcc	.+2      	; 0x1c8 <clear_sprite+0xc8>
 1c6:	a9 cf       	rjmp	.-174    	; 0x11a <clear_sprite+0x1a>
 1c8:	df 91       	pop	r29
 1ca:	cf 91       	pop	r28
 1cc:	08 95       	ret
 1ce:	9e 2f       	mov	r25, r30
 1d0:	97 70       	andi	r25, 0x07	; 7
 1d2:	ea 01       	movw	r28, r20
 1d4:	01 c0       	rjmp	.+2      	; 0x1d8 <clear_sprite+0xd8>
 1d6:	cc 0f       	add	r28, r28
 1d8:	9a 95       	dec	r25
 1da:	ea f7       	brpl	.-6      	; 0x1d6 <clear_sprite+0xd6>
 1dc:	e6 95       	lsr	r30
 1de:	e6 95       	lsr	r30
 1e0:	e6 95       	lsr	r30
 1e2:	c0 95       	com	r28
 1e4:	6e 9f       	mul	r22, r30
 1e6:	f0 01       	movw	r30, r0
 1e8:	11 24       	eor	r1, r1
 1ea:	e8 55       	subi	r30, 0x58	; 88
 1ec:	fe 4f       	sbci	r31, 0xFE	; 254
 1ee:	e8 0f       	add	r30, r24
 1f0:	f1 1d       	adc	r31, r1
 1f2:	80 81       	ld	r24, Z
 1f4:	8c 23       	and	r24, r28
 1f6:	80 83       	st	Z, r24
 1f8:	8e bd       	out	0x2e, r24	; 46
 1fa:	29 9a       	sbi	0x05, 1	; 5
 1fc:	0d b4       	in	r0, 0x2d	; 45
 1fe:	07 fe       	sbrs	r0, 7
 200:	fd cf       	rjmp	.-6      	; 0x1fc <clear_sprite+0xfc>
 202:	29 98       	cbi	0x05, 1	; 5
 204:	d4 cf       	rjmp	.-88     	; 0x1ae <clear_sprite+0xae>

00000206 <draw_sprite>:
 206:	cf 93       	push	r28
 208:	df 93       	push	r29
 20a:	ec 01       	movw	r28, r24
 20c:	0e 94 80 00 	call	0x100	; 0x100 <clear_sprite>
 210:	8f 81       	ldd	r24, Y+7	; 0x07
 212:	88 23       	and	r24, r24
 214:	09 f4       	brne	.+2      	; 0x218 <draw_sprite+0x12>
 216:	4a c0       	rjmp	.+148    	; 0x2ac <draw_sprite+0xa6>
 218:	60 e0       	ldi	r22, 0x00	; 0
 21a:	74 e5       	ldi	r23, 0x54	; 84
 21c:	21 e0       	ldi	r18, 0x01	; 1
 21e:	30 e0       	ldi	r19, 0x00	; 0
 220:	4b 81       	ldd	r20, Y+3	; 0x03
 222:	86 2f       	mov	r24, r22
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	84 0f       	add	r24, r20
 228:	91 1d       	adc	r25, r1
 22a:	95 95       	asr	r25
 22c:	87 95       	ror	r24
 22e:	95 95       	asr	r25
 230:	87 95       	ror	r24
 232:	95 95       	asr	r25
 234:	87 95       	ror	r24
 236:	80 64       	ori	r24, 0x40	; 64
 238:	8e bd       	out	0x2e, r24	; 46
 23a:	0d b4       	in	r0, 0x2d	; 45
 23c:	07 fe       	sbrs	r0, 7
 23e:	fd cf       	rjmp	.-6      	; 0x23a <draw_sprite+0x34>
 240:	8e 81       	ldd	r24, Y+6	; 0x06
 242:	88 23       	and	r24, r24
 244:	71 f1       	breq	.+92     	; 0x2a2 <draw_sprite+0x9c>
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	8a 81       	ldd	r24, Y+2	; 0x02
 24a:	89 0f       	add	r24, r25
 24c:	80 68       	ori	r24, 0x80	; 128
 24e:	8e bd       	out	0x2e, r24	; 46
 250:	0d b4       	in	r0, 0x2d	; 45
 252:	07 fe       	sbrs	r0, 7
 254:	fd cf       	rjmp	.-6      	; 0x250 <draw_sprite+0x4a>
 256:	89 81       	ldd	r24, Y+1	; 0x01
 258:	86 0f       	add	r24, r22
 25a:	e8 2f       	mov	r30, r24
 25c:	e6 95       	lsr	r30
 25e:	e6 95       	lsr	r30
 260:	e6 95       	lsr	r30
 262:	44 e5       	ldi	r20, 0x54	; 84
 264:	e4 9f       	mul	r30, r20
 266:	f0 01       	movw	r30, r0
 268:	11 24       	eor	r1, r1
 26a:	e0 50       	subi	r30, 0x00	; 0
 26c:	ff 4f       	sbci	r31, 0xFF	; 255
 26e:	48 81       	ld	r20, Y
 270:	49 0f       	add	r20, r25
 272:	e4 0f       	add	r30, r20
 274:	f1 1d       	adc	r31, r1
 276:	87 70       	andi	r24, 0x07	; 7
 278:	a9 01       	movw	r20, r18
 27a:	01 c0       	rjmp	.+2      	; 0x27e <draw_sprite+0x78>
 27c:	44 0f       	add	r20, r20
 27e:	8a 95       	dec	r24
 280:	ea f7       	brpl	.-6      	; 0x27c <draw_sprite+0x76>
 282:	80 81       	ld	r24, Z
 284:	48 23       	and	r20, r24
 286:	8a 81       	ldd	r24, Y+2	; 0x02
 288:	89 0f       	add	r24, r25
 28a:	44 23       	and	r20, r20
 28c:	b1 f0       	breq	.+44     	; 0x2ba <draw_sprite+0xb4>
 28e:	84 35       	cpi	r24, 0x54	; 84
 290:	20 f4       	brcc	.+8      	; 0x29a <draw_sprite+0x94>
 292:	4b 81       	ldd	r20, Y+3	; 0x03
 294:	46 0f       	add	r20, r22
 296:	40 33       	cpi	r20, 0x30	; 48
 298:	a0 f1       	brcs	.+104    	; 0x302 <draw_sprite+0xfc>
 29a:	9f 5f       	subi	r25, 0xFF	; 255
 29c:	8e 81       	ldd	r24, Y+6	; 0x06
 29e:	98 17       	cp	r25, r24
 2a0:	98 f2       	brcs	.-90     	; 0x248 <draw_sprite+0x42>
 2a2:	6f 5f       	subi	r22, 0xFF	; 255
 2a4:	8f 81       	ldd	r24, Y+7	; 0x07
 2a6:	68 17       	cp	r22, r24
 2a8:	08 f4       	brcc	.+2      	; 0x2ac <draw_sprite+0xa6>
 2aa:	ba cf       	rjmp	.-140    	; 0x220 <draw_sprite+0x1a>
 2ac:	8a 81       	ldd	r24, Y+2	; 0x02
 2ae:	8c 83       	std	Y+4, r24	; 0x04
 2b0:	8b 81       	ldd	r24, Y+3	; 0x03
 2b2:	8d 83       	std	Y+5, r24	; 0x05
 2b4:	df 91       	pop	r29
 2b6:	cf 91       	pop	r28
 2b8:	08 95       	ret
 2ba:	84 35       	cpi	r24, 0x54	; 84
 2bc:	70 f7       	brcc	.-36     	; 0x29a <draw_sprite+0x94>
 2be:	eb 81       	ldd	r30, Y+3	; 0x03
 2c0:	e6 0f       	add	r30, r22
 2c2:	e0 33       	cpi	r30, 0x30	; 48
 2c4:	50 f7       	brcc	.-44     	; 0x29a <draw_sprite+0x94>
 2c6:	4e 2f       	mov	r20, r30
 2c8:	47 70       	andi	r20, 0x07	; 7
 2ca:	d9 01       	movw	r26, r18
 2cc:	02 c0       	rjmp	.+4      	; 0x2d2 <draw_sprite+0xcc>
 2ce:	aa 0f       	add	r26, r26
 2d0:	bb 1f       	adc	r27, r27
 2d2:	4a 95       	dec	r20
 2d4:	e2 f7       	brpl	.-8      	; 0x2ce <draw_sprite+0xc8>
 2d6:	ad 01       	movw	r20, r26
 2d8:	e6 95       	lsr	r30
 2da:	e6 95       	lsr	r30
 2dc:	e6 95       	lsr	r30
 2de:	40 95       	com	r20
 2e0:	7e 9f       	mul	r23, r30
 2e2:	f0 01       	movw	r30, r0
 2e4:	11 24       	eor	r1, r1
 2e6:	e8 55       	subi	r30, 0x58	; 88
 2e8:	fe 4f       	sbci	r31, 0xFE	; 254
 2ea:	e8 0f       	add	r30, r24
 2ec:	f1 1d       	adc	r31, r1
 2ee:	80 81       	ld	r24, Z
 2f0:	84 23       	and	r24, r20
 2f2:	80 83       	st	Z, r24
 2f4:	8e bd       	out	0x2e, r24	; 46
 2f6:	29 9a       	sbi	0x05, 1	; 5
 2f8:	0d b4       	in	r0, 0x2d	; 45
 2fa:	07 fe       	sbrs	r0, 7
 2fc:	fd cf       	rjmp	.-6      	; 0x2f8 <draw_sprite+0xf2>
 2fe:	29 98       	cbi	0x05, 1	; 5
 300:	cc cf       	rjmp	.-104    	; 0x29a <draw_sprite+0x94>
 302:	e4 2f       	mov	r30, r20
 304:	e6 95       	lsr	r30
 306:	e6 95       	lsr	r30
 308:	e6 95       	lsr	r30
 30a:	47 70       	andi	r20, 0x07	; 7
 30c:	d9 01       	movw	r26, r18
 30e:	02 c0       	rjmp	.+4      	; 0x314 <draw_sprite+0x10e>
 310:	aa 0f       	add	r26, r26
 312:	bb 1f       	adc	r27, r27
 314:	4a 95       	dec	r20
 316:	e2 f7       	brpl	.-8      	; 0x310 <draw_sprite+0x10a>
 318:	ad 01       	movw	r20, r26
 31a:	7e 9f       	mul	r23, r30
 31c:	f0 01       	movw	r30, r0
 31e:	11 24       	eor	r1, r1
 320:	e8 55       	subi	r30, 0x58	; 88
 322:	fe 4f       	sbci	r31, 0xFE	; 254
 324:	e8 0f       	add	r30, r24
 326:	f1 1d       	adc	r31, r1
 328:	80 81       	ld	r24, Z
 32a:	48 2b       	or	r20, r24
 32c:	40 83       	st	Z, r20
 32e:	4e bd       	out	0x2e, r20	; 46
 330:	29 9a       	sbi	0x05, 1	; 5
 332:	0d b4       	in	r0, 0x2d	; 45
 334:	07 fe       	sbrs	r0, 7
 336:	fd cf       	rjmp	.-6      	; 0x332 <draw_sprite+0x12c>
 338:	29 98       	cbi	0x05, 1	; 5
 33a:	af cf       	rjmp	.-162    	; 0x29a <draw_sprite+0x94>

0000033c <main>:
		draw_sprite(&c);
	}
}

int main(void)
{
 33c:	0f 93       	push	r16
 33e:	1f 93       	push	r17
 340:	cf 93       	push	r28
 342:	df 93       	push	r29
 344:	cd b7       	in	r28, 0x3d	; 61
 346:	de b7       	in	r29, 0x3e	; 62
 348:	28 97       	sbiw	r28, 0x08	; 8
 34a:	0f b6       	in	r0, 0x3f	; 63
 34c:	f8 94       	cli
 34e:	de bf       	out	0x3e, r29	; 62
 350:	0f be       	out	0x3f, r0	; 63
 352:	cd bf       	out	0x3d, r28	; 61
	struct sprite zero;
	zero.x_map = 0;
 354:	19 82       	std	Y+1, r1	; 0x01
	zero.y_map = 0;
 356:	1a 82       	std	Y+2, r1	; 0x02
	zero.x_pos = 6;
 358:	86 e0       	ldi	r24, 0x06	; 6
 35a:	8b 83       	std	Y+3, r24	; 0x03
	zero.y_pos = 10;
 35c:	9a e0       	ldi	r25, 0x0A	; 10
 35e:	9c 83       	std	Y+4, r25	; 0x04
	zero.x_ppos = 6;
 360:	8d 83       	std	Y+5, r24	; 0x05
	zero.y_ppos = 10;
 362:	9e 83       	std	Y+6, r25	; 0x06
	zero.wdth = 6;
 364:	8f 83       	std	Y+7, r24	; 0x07
	zero.hght = 4;
 366:	84 e0       	ldi	r24, 0x04	; 4
 368:	88 87       	std	Y+8, r24	; 0x08

// Initialize SPI Master Device (with SPI interrupt)
void spi_init_master (void)
{
	// Set MOSI, SCK, SS, DC, and RST as Output
	DDR_SPI=(1<<DD_MOSI)|(1<<DD_SCK)|(1<<DD_SS)|(1<<DD_DC)|(1<<DD_RST);
 36a:	8f e2       	ldi	r24, 0x2F	; 47
 36c:	84 b9       	out	0x04, r24	; 4

	// Enable SPI, Set as Master
	// Prescaler: Fosc/16, Enable Interrupts
	//The MOSI, SCK pins are as per ATMega8
	SPCR=(1<<SPE)|(1<<MSTR)|(1<<SPR0);
 36e:	81 e5       	ldi	r24, 0x51	; 81
 370:	8c bd       	out	0x2c, r24	; 44
	sjsu.y_pos = 48;

	//Initialize the SPI bus
	spi_init_master();
	//Initialize the screen
	init_screen();
 372:	0e 94 53 00 	call	0xa6	; 0xa6 <init_screen>
	blank_display();
 376:	0e 94 75 00 	call	0xea	; 0xea <blank_display>
	//draw a test pattern
	draw_sprite(&zero);
 37a:	ce 01       	movw	r24, r28
 37c:	01 96       	adiw	r24, 0x01	; 1
 37e:	0e 94 03 01 	call	0x206	; 0x206 <draw_sprite>
 382:	08 e1       	ldi	r16, 0x18	; 24
 384:	10 e0       	ldi	r17, 0x00	; 0
	//draw_string(&tetris);
	//draw_string(&sjsu);
	for(int i = 6; i < 30; i++)
	{
		zero.x_pos++;
 386:	8b 81       	ldd	r24, Y+3	; 0x03
 388:	8f 5f       	subi	r24, 0xFF	; 255
 38a:	8b 83       	std	Y+3, r24	; 0x03
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 38c:	8f e9       	ldi	r24, 0x9F	; 159
 38e:	9f e0       	ldi	r25, 0x0F	; 15
 390:	01 97       	sbiw	r24, 0x01	; 1
 392:	f1 f7       	brne	.-4      	; 0x390 <main+0x54>
 394:	00 c0       	rjmp	.+0      	; 0x396 <main+0x5a>
 396:	00 00       	nop
		_delay_ms(1);
		draw_sprite(&zero);
 398:	ce 01       	movw	r24, r28
 39a:	01 96       	adiw	r24, 0x01	; 1
 39c:	0e 94 03 01 	call	0x206	; 0x206 <draw_sprite>
 3a0:	01 50       	subi	r16, 0x01	; 1
 3a2:	11 09       	sbc	r17, r1
	blank_display();
	//draw a test pattern
	draw_sprite(&zero);
	//draw_string(&tetris);
	//draw_string(&sjsu);
	for(int i = 6; i < 30; i++)
 3a4:	81 f7       	brne	.-32     	; 0x386 <main+0x4a>
		zero.x_pos++;
		_delay_ms(1);
		draw_sprite(&zero);
	}
	//End execution of code
	sleep_mode();
 3a6:	83 b7       	in	r24, 0x33	; 51
 3a8:	81 60       	ori	r24, 0x01	; 1
 3aa:	83 bf       	out	0x33, r24	; 51
 3ac:	88 95       	sleep
 3ae:	83 b7       	in	r24, 0x33	; 51
 3b0:	8e 7f       	andi	r24, 0xFE	; 254
 3b2:	83 bf       	out	0x33, r24	; 51
	return(0);
 3b4:	80 e0       	ldi	r24, 0x00	; 0
 3b6:	90 e0       	ldi	r25, 0x00	; 0
 3b8:	28 96       	adiw	r28, 0x08	; 8
 3ba:	0f b6       	in	r0, 0x3f	; 63
 3bc:	f8 94       	cli
 3be:	de bf       	out	0x3e, r29	; 62
 3c0:	0f be       	out	0x3f, r0	; 63
 3c2:	cd bf       	out	0x3d, r28	; 61
 3c4:	df 91       	pop	r29
 3c6:	cf 91       	pop	r28
 3c8:	1f 91       	pop	r17
 3ca:	0f 91       	pop	r16
 3cc:	08 95       	ret

000003ce <_exit>:
 3ce:	f8 94       	cli

000003d0 <__stop_program>:
 3d0:	ff cf       	rjmp	.-2      	; 0x3d0 <__stop_program>
